@namespace EDO_FOMS.Client.Pages.Docs

@page "/docs"

@using EDO_FOMS.Application.Responses.Docums
@using EDO_FOMS.Application.Features.Orgs.Queries
@using EDO_FOMS.Client.Models
@using EDO_FOMS.Domain.Enums

@inject Microsoft.Extensions.Localization.IStringLocalizer<Docs> _localizer

<MudPaper Square="true" Elevation="1" Style="z-index: 1;">
    <MudToolBar>
        <MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Documents for signing"]" Color="Color.Tertiary" Placement="Placement.Right" Arrow="true">
            <MudText Typo="Typo.button">@_localizer["Documents"]</MudText>
        </MudTooltip>

        <MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Renew"]" Color="Color.Tertiary" Placement="Placement.Right" Arrow="true">
            <MudIconButton Icon="@Icons.Material.Outlined.Sync" OnClick="RenewAsync"></MudIconButton>
        </MudTooltip>

        @if (importPossible && _loaded)
        {
            <MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Import"]" Color="Color.Tertiary" Placement="Placement.Right" Arrow="true">
                <MudIconButton Variant="Variant.Text" Icon="@Icons.Material.Rounded.Upload" Color="Color.Default" OnClick="ImportFiles" Disabled="@(!_loaded)"></MudIconButton>
            </MudTooltip>
        }

        <MudSpacer />

        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" Class="search-field" Immediate="false" FullWidth=false
                      Placeholder="@_localizer["Document search"]" T="string" Clearable="true" ValueChanged="@(s => OnSearch(s))"
                      Adornment="Adornment.Start" AdornmentColor="Color.Default" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium">
        </MudTextField>

        <MudTooltip Delay="@delay" Duration="@duration" Placement="Placement.Left" Color="Color.Tertiary" Arrow="true"
                    Text="@(matchCase ? _localizer["Match Case On"] : _localizer["Match Case Off"])">
            <MudToggleIconButton Toggled="@matchCase" ToggledChanged="OnToggledMatchCase"
                                 Icon="@Icons.Material.Filled.FormatStrikethrough" Color="@Color.Default"
                                 ToggledIcon="@Icons.Material.Filled.TextFields" ToggledColor="@Color.Default" />
        </MudTooltip>

        <MudTooltip Delay="@delay" Duration="@duration" Placement="Placement.Left" Color="Color.Tertiary" Arrow="true"
                    Text="@_localizer["Rows density"]">

            <MudToggleIconButton Toggled="@dense" ToggledChanged="OnToggledDense"
                                 Icon="@Icons.Material.Filled.DensityMedium" Color="@Color.Default"
                                 ToggledIcon="@Icons.Material.Filled.DensitySmall" ToggledColor="@Color.Default" />
        </MudTooltip>

        <MudTooltip Delay="@delay" Duration="@duration" Placement="Placement.Left" Color="Color.Tertiary" Arrow="true" Text="@_localizer["Filter"]">
            <MudIconButton Icon="@Icons.Material.TwoTone.FilterAlt" Color="@(Filter.IsActive ? Color.Error : Color.Default)" OnClick="@ToggleFilter" /> @*Edge="Edge.End"*@
        </MudTooltip>
    </MudToolBar>
</MudPaper>

<MudContainer MaxWidth="MaxWidth.False" Class="pa-6">
    <MudTable Hover="true" Dense="@dense" Bordered="false" Striped="true" Breakpoint="Breakpoint.Xs"
              @ref="_mudTable" T="DocModel" @bind-SelectedItem="_doc" OnRowClick="OnRowClickAsync"
              ServerData="@(new Func<TableState, Task<TableData<DocModel>>>(ServerReloadAsync))"
              Loading="@(!_loaded)" LoadingProgressColor="Color.Info" RowsPerPage="@_rowsPerPage"
              RowClassFunc="@UnreadRowClassFunc" RowClass="actions">

        <ColGroup>
            <col /><col /><col /><col />
            <col class="col-date" />
            <col /><col />
            <col class="col-date-time" />
        </ColGroup>

        <HeaderContent>
            <MudTh><MudTableSortLabel T="DocModel" SortLabel="Stage">@_localizer["Stage"]</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="DocModel" SortLabel="CurrentStep">@_localizer["Step"]</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="DocModel" SortLabel="TypeId">@_localizer["Type"]</MudTableSortLabel></MudTh>

            <MudTh><MudTableSortLabel T="DocModel" SortLabel="Number">@_localizer["Number"]</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="DocModel" SortLabel="Date">@_localizer["Date"]</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="DocModel" SortLabel="Title">@_localizer["Title"]</MudTableSortLabel></MudTh>

            <MudTh>@_localizer["Recipient"]</MudTh>

            <MudTh><MudTableSortLabel T="DocModel" SortLabel="CreatedOn">@_localizer["Create on"]</MudTableSortLabel></MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd>
                <div class="d-flex flex-row" style="height: 24px;">
                    @if (context.Stage == DocStages.Draft)
                    {
                        <MudIcon Icon="@Icons.Material.TwoTone.IntegrationInstructions" Color="Color.Default" Class="mr-2" />
                        @*<MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Draft"]" Placement="Placement.Right" Color="Color.Tertiary"></MudTooltip>*@
                    }
                    else if (context.Stage == DocStages.InProgress)
                    {
                        <MudIcon Icon="@Icons.Material.TwoTone.NoteAlt" Color="Color.Warning" Class="mr-2" />
                        @*<MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["In progress"]" Placement="Placement.Right" Color="Color.Tertiary"></MudTooltip>*@
                    }
                    else if (context.Stage == DocStages.Rejected)
                    {
                        <MudIcon Icon="@Icons.Material.TwoTone.AssignmentReturn" Color="Color.Error" Class="mr-2" />
                        @*<MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Rejected"]" Placement="Placement.Right" Color="Color.Tertiary"></MudTooltip>*@
                    }
                    else if (context.Stage == DocStages.Canceled)
                    {
                        <MudIcon Icon="@Icons.Material.TwoTone.AssignmentReturned" Color="Color.Error" Class="mr-2" />
                        @*<MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Rejected"]" Placement="Placement.Right" Color="Color.Tertiary"></MudTooltip>*@
                    }
                    else if (context.Stage == DocStages.Deleted)
                    {
                        <MudIcon Icon="@Icons.Material.TwoTone.DeleteForever" Color="Color.Error" Class="mr-2" />
                        @*<MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Rejected"]" Placement="Placement.Right" Color="Color.Tertiary"></MudTooltip>*@
                    }
                    else if (context.Stage == DocStages.Agreed)
                    {
                        <MudIcon Icon="@Icons.Material.TwoTone.AssignmentTurnedIn" Color="Color.Success" Class="mr-2" />
                        @*<MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Agreed"]" Placement="Placement.Right" Color="Color.Tertiary"></MudTooltip>*@
                    }
                    else if (context.Stage == DocStages.Archive)
                    {
                        <MudIcon Icon="@Icons.Material.TwoTone.Archive" Color="Color.Tertiary" Class="mr-2" />
                        @*<MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Agreed"]" Placement="Placement.Right" Color="Color.Tertiary"></MudTooltip>*@
                    }
                    @context.StageName
                    @*<MudHighlighter Text="@context.StageName" HighlightedText="@_searchString" CaseSensitive="@matchCase"/>*@
                </div>
            </MudTd>

            <MudTd DataLabel="@_localizer["Step"]">
                @context.CurrentStep из @context.TotalSteps
            </MudTd>

            <MudTd DataLabel="@_localizer["Type"]">
                @*<MudHighlighter Text="@context.TypeName" HighlightedText="@_searchString" CaseSensitive="@matchCase"/>*@
                @context.TypeName
            </MudTd>
            <MudTd DataLabel="@_localizer["Number"]">
                <MudHighlighter Text="@context.Number" HighlightedText="@_searchString" CaseSensitive="@matchCase" />
            </MudTd>
            <MudTd DataLabel="@_localizer["Date"]">
                @*<MudHighlighter Text="@context.DateStr" HighlightedText="@_searchString" CaseSensitive="@matchCase"/>*@
                @context.DateStr
            </MudTd>
            <MudTd DataLabel="@_localizer["Title"]">
                <MudHighlighter Text="@context.Title" HighlightedText="@_searchString" CaseSensitive="@matchCase" />
            </MudTd>

            <MudTd DataLabel="@_localizer["Recipient"]">
                <MudHighlighter Text="@(string.IsNullOrWhiteSpace(context.RecipientShort) ? context.RecipientInn : context.RecipientShort)"
                                HighlightedText="@_searchString" CaseSensitive="@matchCase" />
            </MudTd>

            @*<MudTd DataLabel="@_localizer["File Name"]">
            <MudLink Href="@context.URL" Underline="Underline.None" Target="_blank">
            <MudHighlighter Text="@context.FileName" HighlightedText="@_searchString" CaseSensitive="@matchCase"/>
            </MudLink>
            </MudTd>*@

            <MudTd DataLabel="@_localizer["Create on"]" Class="action-cell">
                <div class="actions-content">
                    @*<MudHighlighter Text="@context.CreatedOnStr" HighlightedText="@_searchString" CaseSensitive="@matchCase"/>*@
                    @context.CreatedOnStr
                </div>

                <span class="actions-panel">
                    @{
                        if (context.Stage == DocStages.Draft)
                        {
                            <MudTooltip Delay="@delay" Duration="@duration" Placement="Placement.Left" Color="Color.Tertiary" Arrow="true" Text="@_localizer["Run"]">
                                <MudIconButton Class="mx-1" Variant="Variant.Outlined" Size="Size.Small" aria-label="Run"
                                       Color="Color.Success" Icon="@Icons.Material.Outlined.PlayArrow" Disabled="@(!_loaded || string.IsNullOrWhiteSpace(context.FileName))"
                                       OnClick="(() => RunProcessAsync(context.DocId))">
                                </MudIconButton>
                            </MudTooltip>
                        }

                        if (context.Stage == DocStages.InProgress || context.Stage == DocStages.Rejected || context.Stage == DocStages.Agreed)
                        {
                            <MudTooltip Delay="@delay" Duration="@duration" Placement="Placement.Left" Color="Color.Tertiary" Arrow="true" Text="@_localizer["Pause"]">
                                <MudIconButton Class="mx-1" Variant="Variant.Outlined" Size="Size.Small" aria-label="Pause"
                                       Color="Color.Warning" Icon="@Icons.Material.Outlined.Replay" Disabled="@(!_loaded)"
                                       OnClick="(() => StopProcessAsync(context.DocId))">
                                </MudIconButton>
                            </MudTooltip>
                        }

                        if (context.Stage == DocStages.Draft || context.Stage == DocStages.InProgress || context.Stage == DocStages.Rejected)
                        {
                            <MudTooltip Delay="@delay" Duration="@duration" Placement="Placement.Left" Color="Color.Tertiary" Arrow="true" Text="@_localizer["Delete"]">
                                <MudIconButton Class="mx-1" Variant="Variant.Outlined" Size="Size.Small" aria-label="Delete"
                                       Color="Color.Error" Icon="@Icons.Material.Outlined.Clear" Disabled="@(!_loaded)"
                                       OnClick="(() => DeleteDocAsync(context.DocId))">
                                </MudIconButton>
                            </MudTooltip>
                        }
                    }
                </span>
            </MudTd>
        </RowTemplate>

        <PagerContent>
            <TablePager />
        </PagerContent>
    </MudTable>
</MudContainer>

<MudDrawer @bind-Open="@openFilter" Anchor="Anchor.Right" Elevation="1" Variant="@DrawerVariant.Persistent" ClipMode="DrawerClipMode.Always">

    <MudDrawerHeader Style="padding: 8px 4px 8px 16px;">
        <MudText Style="align-self:center;" Typo="Typo.button" Inline="true">@_localizer["Advanced filter"]</MudText>
        <MudSpacer />
        <MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Reset"]" Color="Color.Tertiary" Placement="Placement.Left" Arrow="true">
            <MudIconButton Icon="@Icons.Material.Outlined.SettingsBackupRestore" Color="Color.Primary" OnClick="FilterReset" Disabled="@(!Filter.IsActive)" />
        </MudTooltip>
    </MudDrawerHeader>

    <MudDivider />

    <MudList Clickable="true" Class="py-0">
        <MudListItem Icon="@Icons.Material.Outlined.AssignmentInd" Text="@_localizer["Attendee"]" InitiallyExpanded="false"
                     AdornmentColor="Color.Primary" IconColor="@(Filter.ChangedAttendee ? Color.Error : Color.Primary)">
            <NestedList>
                <MudAutocomplete Class="mx-2" Label="@_localizer["Organization"]" ToStringFunc="@(e => OrgName(e))" Disabled="@(!_loaded)"
                                 T="OrgsResponse" Value="orgContact" SearchFunc="@SearchOrgAsync" ValueChanged="@(o => OrgChanged(o))"
                                 ResetValueOnEmptyText="@resetValueOnEmptyText" CoerceText="@coerceText" CoerceValue="@coerceValue" Dense="true" />

                <MudAutocomplete Class="mx-2" Label="@_localizer["Employee"]" ToStringFunc="@(e => EmployeeName(e))" Disabled="@(!_loaded)"
                                 T="ContactResponse" Value="employeeContact" SearchFunc="@SearchEmployeeAsync" ValueChanged="@(e => EmployeeChanged(e))"
                                 ResetValueOnEmptyText="@resetValueOnEmptyText" CoerceText="@coerceText" CoerceValue="@coerceValue" Dense="true" />
            </NestedList>
        </MudListItem>
        <MudDivider />

        <MudListItem Icon="@Icons.Material.Outlined.Assignment" Text="@_localizer["Stage"]" InitiallyExpanded="false"
                     AdornmentColor="Color.Primary" IconColor="@(Filter.ChangedStage ? Color.Error : Color.Primary)">
            <NestedList>
                <MudListItem Icon="@(Filter.StageDraft ? Icons.Material.TwoTone.IntegrationInstructions : Icons.Material.Outlined.CheckBoxOutlineBlank)"
                             IconColor="@(Filter.StageDraft ? Color.Default : Color.Default)" OnClick="@(() => OnStage("Draft"))">
                    @_localizer["Draft"]
                </MudListItem>

                <MudListItem Icon="@(Filter.StageInProgress ? Icons.Material.TwoTone.NoteAlt : Icons.Material.Outlined.CheckBoxOutlineBlank)"
                             IconColor="@(Filter.StageInProgress ? Color.Warning : Color.Default)" OnClick="@(() => OnStage("InProgress"))">
                    @_localizer["InProgress"]
                </MudListItem>

                <MudListItem Icon="@(Filter.StageRejected ? Icons.Material.TwoTone.AssignmentReturn : Icons.Material.Outlined.CheckBoxOutlineBlank)"
                             IconColor="@(Filter.StageRejected ? Color.Error : Color.Default)" OnClick="@(() => OnStage("Rejected"))">
                    @_localizer["Rejected"]
                </MudListItem>
            </NestedList>
        </MudListItem>
        <MudDivider />

        <MudListItem Icon="@Icons.Material.Outlined.DocumentScanner" Text="@_localizer["Type"]" InitiallyExpanded="false"
                     AdornmentColor="Color.Primary" IconColor="@(Filter.ChangedType ? Color.Error : Color.Primary)">
            <NestedList>
                @foreach (var dt in Filter.DocTypes)
                {
                    <MudListItem Icon="@(dt.IsChecked ? DocTypeIcon(dt.Icon) : Icons.Material.Outlined.CheckBoxOutlineBlank)"
                             IconColor="@(dt.IsChecked ? dt.Color : Color.Default)" OnClick="@(() => OnType(dt))">
                        @dt.Label
                    </MudListItem>
                }
            </NestedList>
        </MudListItem>
        <MudDivider />

        <MudListItem Icon="@Icons.Material.Outlined.FontDownload" Text="@_localizer["Text"]" InitiallyExpanded="false"
                     AdornmentColor="Color.Primary" IconColor="@(Filter.ChangedText ? Color.Error : Color.Primary)">
            <NestedList>
                <MudTextField Class="mx-2" Label="@_localizer["Number"]" Variant="Variant.Text" Margin="Margin.Dense"
                              @bind-Value="Filter.TextNumber" TextChanged="@(() => OnText())">
                </MudTextField>
                <MudTextField Class="mx-2" Label="@_localizer["Title"]" Variant="Variant.Text" Margin="Margin.Dense"
                              @bind-Value="Filter.TextTitle" TextChanged="@(() => OnText())">
                </MudTextField>
            </NestedList>
        </MudListItem>
        <MudDivider />

        <MudListItem Icon="@Icons.Material.Outlined.DateRange" Text="@_localizer["Date"]" InitiallyExpanded="false"
                     AdornmentColor="Color.Primary" IconColor="@(Filter.ChangedDate ? Color.Error : Color.Primary)">
            <NestedList>
                <MudDatePicker Class="mx-2" Label="@_localizer["From"]" Editable="false" DisableToolbar="true" AdornmentIcon="@Icons.Material.TwoTone.Today"
                               @ref="_dateFrom" Date="Filter.DateFrom" DateChanged="@((d) => OnDate("From", d))" AutoClose="true">
                    <PickerActions>
                        <MudButton StartIcon="@Icons.Material.TwoTone.EventBusy" OnClick="@(() => _dateFrom.Clear())">@_localizer["Clear"]</MudButton>
                        @*<MudButton OnClick="@(() => _dateFrom.Close(false))">@_localizer["Cancel"]</MudButton>*@
                        @*<MudButton Color="Color.Primary" OnClick="@(() => _dateFrom.Close())">@_localizer["Ok"]</MudButton>*@
                    </PickerActions>
                </MudDatePicker>

                <MudDatePicker Class="mx-2" Label="@_localizer["To"]" Editable="false" DisableToolbar="true" AdornmentIcon="@Icons.Material.TwoTone.Event"
                               @ref="_dateTo" Date="Filter.DateTo" DateChanged="@((d) => OnDate("To", d))" AutoClose="true">
                    <PickerActions>
                        <MudButton StartIcon="@Icons.Material.TwoTone.EventBusy" OnClick="@(() => _dateTo.Clear())">@_localizer["Clear"]</MudButton>
                        @*<MudButton OnClick="@(() => _dateTo.Close(false))">@_localizer["Cancel"]</MudButton>*@
                        @*<MudButton Color="Color.Primary" OnClick="@(() => _dateTo.Close())">@_localizer["Ok"]</MudButton>*@
                    </PickerActions>
                </MudDatePicker>
            </NestedList>
        </MudListItem>
        <MudDivider />

        <MudListItem Icon="@Icons.Material.Outlined.DateRange" Text="@_localizer["Create on"]" InitiallyExpanded="false"
                     AdornmentColor="Color.Primary" IconColor="@(Filter.ChangedCreateOn ? Color.Error : Color.Primary)">
            <NestedList>
                <MudDatePicker Class="mx-2" Label="@_localizer["From"]" Editable="false" DisableToolbar="true" AdornmentIcon="@Icons.Material.TwoTone.Today"
                               @ref="_createOnFrom" Date="Filter.CreateOnFrom" DateChanged="@((d) => OnCreateOn("From", d))" AutoClose="true">
                    <PickerActions>
                        <MudButton StartIcon="@Icons.Material.TwoTone.EventBusy" OnClick="@(() => _createOnFrom.Clear())">@_localizer["Clear"]</MudButton>
                        @*<MudButton StartIcon="@Icons.Material.Outlined.Clear" OnClick="@(() => _createOnFrom.Close(false))">@_localizer["Cancel"]</MudButton>*@
                        @*<MudButton Color="Color.Primary" OnClick="@(() => _createOnFrom.Close())">@_localizer["Ok"]</MudButton>*@
                    </PickerActions>
                </MudDatePicker>

                <MudDatePicker Class="mx-2" Label="@_localizer["To"]" Editable="false" DisableToolbar="true" AdornmentIcon="@Icons.Material.TwoTone.Event"
                               @ref="_createOnTo" Date="Filter.CreateOnTo" DateChanged="@((d) => OnCreateOn("To", d))" AutoClose="true">
                    <PickerActions>
                        <MudButton StartIcon="@Icons.Material.TwoTone.EventBusy" OnClick="@(() => _createOnTo.Clear())">@_localizer["Clear"]</MudButton>
                        @*<MudButton OnClick="@(() => _createOnTo.Close(false))">@_localizer["Cancel"]</MudButton>*@
                        @*<MudButton Color="Color.Primary" OnClick="@(() => _createOnTo.Close())">@_localizer["Ok"]</MudButton>*@
                    </PickerActions>
                </MudDatePicker>
            </NestedList>
        </MudListItem>
        <MudDivider />

        @*Disabled="@(!Filter.IsActive)"*@
        @*Disabled="@(Filter.IsEmpty)" *@
        <MudListItem>
            <MudButton FullWidth="true" Variant="Variant.Outlined" StartIcon="@Icons.Outlined.Done" Color="Color.Primary"
                       OnClick="ApplyFilter">@_localizer["Apply"]</MudButton>
        </MudListItem>
        <MudDivider />
    </MudList>
</MudDrawer>

@if (_canDocsCreate)
{
    if (_activeRoutes.Count == 1)
    {
        <MudItem Class="fab-btn-add">
            <MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Upload new document"]" Color="Color.Tertiary" Placement="Placement.Left" Arrow="true">
                <MudFab Color="Color.Secondary" Icon="@Icons.Material.Rounded.Add" aria-label="upload" OnClick="() => AddDocAsync(_activeRoutes[0].Id)" />
            </MudTooltip>
        </MudItem>
    }
    else if (_activeRoutes.Count > 1) @* <= 10, > 10 -> диалоговое окно*@
    {
        <MudItem Class="fab-btn-add">
            <MudMenu AnchorOrigin="Origin.TopCenter" TransformOrigin="Origin.BottomRight" Dense="@(_activeRoutes.Count > 10)">
                <ActivatorContent>
                    <MudTooltip Delay="@delay" Duration="@duration" Text="@_localizer["Upload new document"]" Color="Color.Tertiary" Placement="Placement.Left" Arrow="true">
                        <MudFab Color="Color.Secondary" Icon="@Icons.Material.Rounded.Add" aria-label="upload" />
                    </MudTooltip>
                </ActivatorContent>

                @*OnClick="() => AddDocAsync(_activeRoutes[0].Id)" *@

                <ChildContent>
                    @foreach (var route in _activeRoutes)
                    {
                        <MudMenuItem OnClick="() => AddDocAsync(route.Id)">@route.Name</MudMenuItem>
                    }
                </ChildContent>
            </MudMenu>
        </MudItem>
    }
}
