<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Algorithm" xml:space="preserve">
    <value>Algorithm</value>
  </data>
  <data name="Are you org cheif?" xml:space="preserve">
    <value>Are you org cheif?</value>
  </data>
  <data name="Attachment selection" xml:space="preserve">
    <value>Attachment selection</value>
  </data>
  <data name="By INN" xml:space="preserve">
    <value>By INN</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Certificate" xml:space="preserve">
    <value>Certificate</value>
  </data>
  <data name="Certificate not active. Administrator verification required" xml:space="preserve">
    <value>Certificate not active. Administrator verification required</value>
  </data>
  <data name="Certificate user organization not found" xml:space="preserve">
    <value>Certificate user organization not found</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Login with your Credentials.</value>
  </data>
  <data name="Don't have an account?" xml:space="preserve">
    <value>Don't have an account?</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Electronic key" xml:space="preserve">
    <value>Electronic key</value>
  </data>
  <data name="Email is required!" xml:space="preserve">
    <value>Email is required!</value>
  </data>
  <data name="Fill Administrator Credentials" xml:space="preserve">
    <value>Fill Administrator Credentials</value>
  </data>
  <data name="Fill Basic User Credentials" xml:space="preserve">
    <value>Fill Basic User Credentials</value>
  </data>
  <data name="Forgot password?" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="INN" xml:space="preserve">
    <value>INN</value>
  </data>
  <data name="INN required" xml:space="preserve">
    <value>INN required</value>
  </data>
  <data name="Issuer" xml:space="preserve">
    <value>Issuer</value>
  </data>
  <data name="Multiple user organizations found" xml:space="preserve">
    <value>Multiple user organizations found</value>
  </data>
  <data name="New employee registration required" xml:space="preserve">
    <value>New employee registration required</value>
  </data>
  <data name="New user registration required" xml:space="preserve">
    <value>New user registration required</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Only the head has the right to register it" xml:space="preserve">
    <value>Only the head has the right to register it</value>
  </data>
  <data name="Organization details verification" xml:space="preserve">
    <value>Organization details verification:</value>
  </data>
  <data name="Organization Name" xml:space="preserve">
    <value>Organization Name</value>
  </data>
  <data name="Organization registration required" xml:space="preserve">
    <value>Organization registration required</value>
  </data>
  <data name="OrgInn" xml:space="preserve">
    <value>Organization INN</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password is required!" xml:space="preserve">
    <value>Password is required!</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Register here" xml:space="preserve">
    <value>Register here</value>
  </data>
  <data name="Remember me?" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Server did not respond" xml:space="preserve">
    <value>Server did not respond</value>
  </data>
  <data name="Sign In" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="Signing" xml:space="preserve">
    <value>Signing</value>
  </data>
  <data name="Snils" xml:space="preserve">
    <value>SNILS</value>
  </data>
  <data name="System Check" xml:space="preserve">
    <value>System Check</value>
  </data>
  <data name="The certificate has been verified. Login started" xml:space="preserve">
    <value>The certificate has been verified. Login started</value>
  </data>
  <data name="The new certificate has been added to the user" xml:space="preserve">
    <value>The new certificate has been added to the user</value>
  </data>
  <data name="The organization is not active. Admin Verification Required" xml:space="preserve">
    <value>The organization is not active. Admin Verification Required</value>
  </data>
  <data name="The organization is not registered" xml:space="preserve">
    <value>The organization is not registered</value>
  </data>
  <data name="The token is not connected" xml:space="preserve">
    <value>The token is not connected</value>
  </data>
  <data name="The user is not active. Administrator verification required" xml:space="preserve">
    <value>The user is not active. Administrator verification required</value>
  </data>
  <data name="The user specified in the certificate was not found" xml:space="preserve">
    <value>The user specified in the certificate was not found</value>
  </data>
  <data name="Thumbprint" xml:space="preserve">
    <value>Thumbprint</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>EDO OMS RT</value>
  </data>
  <data name="Title Of Chief" xml:space="preserve">
    <value>Title Of Chief</value>
  </data>
  <data name="Unknown error" xml:space="preserve">
    <value>Unknown error</value>
  </data>
  <data name="User organization found" xml:space="preserve">
    <value>User organization found</value>
  </data>
  <data name="Valid" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="Welcome {0}" xml:space="preserve">
    <value>Welcome {0}</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>