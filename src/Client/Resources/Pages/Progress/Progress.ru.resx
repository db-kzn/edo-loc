<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>Действие</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="Advanced filter" xml:space="preserve">
    <value>Фильтр</value>
  </data>
  <data name="Agreed" xml:space="preserve">
    <value>Подписанный</value>
  </data>
  <data name="Agreement" xml:space="preserve">
    <value>Согласование</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Применить</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Согласовать</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Подписан всеми</value>
  </data>
  <data name="Attendee" xml:space="preserve">
    <value>Участник</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Отменен</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Очистить</value>
  </data>
  <data name="Contract" xml:space="preserve">
    <value>Договор</value>
  </data>
  <data name="Create on" xml:space="preserve">
    <value>Записан</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Удален</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Примечание</value>
  </data>
  <data name="Document search" xml:space="preserve">
    <value>Поиск документов</value>
  </data>
  <data name="Documents for signature" xml:space="preserve">
    <value>Документы на согласование / подпись</value>
  </data>
  <data name="Draft" xml:space="preserve">
    <value>Черновик</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Сотрудник</value>
  </data>
  <data name="Executing" xml:space="preserve">
    <value>Исполнение</value>
  </data>
  <data name="File Name" xml:space="preserve">
    <value>Документ</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Фильтр</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="In progress" xml:space="preserve">
    <value>На подписании</value>
  </data>
  <data name="Inbox" xml:space="preserve">
    <value>Входящие</value>
  </data>
  <data name="Initiation" xml:space="preserve">
    <value>Инициация</value>
  </data>
  <data name="InProgress" xml:space="preserve">
    <value>На подписании</value>
  </data>
  <data name="Match Case Off" xml:space="preserve">
    <value>Без учета регистра</value>
  </data>
  <data name="Match Case On" xml:space="preserve">
    <value>Учитывать регистр</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Доп.согласующие</value>
  </data>
  <data name="Negotiation progress" xml:space="preserve">
    <value>Ход согласования</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Номер</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Организация</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Отозвать</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Входящие</value>
  </data>
  <data name="Recipient" xml:space="preserve">
    <value>Получатель</value>
  </data>
  <data name="Refuse" xml:space="preserve">
    <value>Дать замечания</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Отклонить</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Отклонено</value>
  </data>
  <data name="Renew" xml:space="preserve">
    <value>Обновить</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Сбросить</value>
  </data>
  <data name="Review" xml:space="preserve">
    <value>Рецензирование</value>
  </data>
  <data name="Route" xml:space="preserve">
    <value>Маршрут</value>
  </data>
  <data name="Rows density" xml:space="preserve">
    <value>Плотность строк</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>Запустить</value>
  </data>
  <data name="Search For Agreements" xml:space="preserve">
    <value>Поиск согласований</value>
  </data>
  <data name="Signing" xml:space="preserve">
    <value>Подписание</value>
  </data>
  <data name="Signing failed" xml:space="preserve">
    <value>Ошибка подписания</value>
  </data>
  <data name="Stage" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="Step" xml:space="preserve">
    <value>Этап</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Текст</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Наименование</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>По</value>
  </data>
  <data name="To Agreement" xml:space="preserve">
    <value>Согласование</value>
  </data>
  <data name="To Archive" xml:space="preserve">
    <value>В архив</value>
  </data>
  <data name="To Signed" xml:space="preserve">
    <value>Подписать</value>
  </data>
  <data name="ToApprove" xml:space="preserve">
    <value>Согласование</value>
  </data>
  <data name="ToRun" xml:space="preserve">
    <value>Инициация</value>
  </data>
  <data name="ToSign" xml:space="preserve">
    <value>Подписание</value>
  </data>
  <data name="ToVerify" xml:space="preserve">
    <value>Доп.согласование</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Вид</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>Согласовать</value>
  </data>
</root>